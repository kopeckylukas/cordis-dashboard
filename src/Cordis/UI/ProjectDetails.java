/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Cordis.UI;

import Cordis.BG.UserLog;
import Cordis.DB.DatabaseConnectivity;
import Cordis.Entities.User;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lukaskopecky
 */
public class ProjectDetails extends javax.swing.JFrame {
    
    User localUser;
    private static DatabaseConnectivity connect = new DatabaseConnectivity();
    
    
    /**
     * Creates new form UserActivity
     */
    public ProjectDetails() {
        initComponents();
        
        this.localUser = null;
        
        //view default table input
        defaultOrganisation();
        defaultProject();
        defaultParticipation();
        
    }
    
    
    
    /**
     * Constructor in use if accessed form program, displays data
     * @param localUser user displaying the page 
     */
    ProjectDetails(User localUser) {
        initComponents();
        this.localUser = localUser;
        usernameField.setText(localUser.getName()+" "+localUser.getSurname());
        
        
        //view defautl table input
        defaultOrganisation();
        defaultProject();
        defaultParticipation();
        
        //admin Button
        if(localUser.getType().equals("U")){
            administratorDetailLable.setVisible(false);
        }
        if(localUser.getType().equals("A")){
            administratorDetailLable.setVisible(true);
        }
        
        UserLog log = new UserLog(localUser);
        log.logActivity("Project Details");
        
    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        adminSign = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        orgTable = new javax.swing.JTable();
        userActivitySign = new javax.swing.JLabel();
        currentLabel = new javax.swing.JLabel();
        overviewLabal = new javax.swing.JLabel();
        logOutSign = new javax.swing.JLabel();
        administratorDetailLable = new javax.swing.JLabel();
        surnameSearchLabel1 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        footerLab = new javax.swing.JLabel();
        fotterLabel = new javax.swing.JLabel();
        usernameField = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        partiTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        proTable = new javax.swing.JTable();
        orgSearch = new javax.swing.JTextField();
        surnameSearchLabel2 = new javax.swing.JLabel();
        surnameSearchLabel3 = new javax.swing.JLabel();
        surnameSearchLabel4 = new javax.swing.JLabel();
        surnameSearchLabel5 = new javax.swing.JLabel();
        proSearch = new javax.swing.JTextField();
        orgMenu = new javax.swing.JComboBox<>();
        proMenu = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setMinimumSize(new java.awt.Dimension(1680, 990));
        jPanel1.setPreferredSize(new java.awt.Dimension(1680, 900));

        adminSign.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
        adminSign.setForeground(new java.awt.Color(255, 153, 102));
        adminSign.setText("CORDIS");

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));

        orgTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Log In", "Log Out", "Duration"
            }
        ));
        orgTable.setRowHeight(14);
        orgTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                orgTableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(orgTable);

        userActivitySign.setFont(new java.awt.Font("Dialog", 1, 22)); // NOI18N
        userActivitySign.setForeground(new java.awt.Color(255, 153, 102));
        userActivitySign.setText("DASHBOARD - PROJECT DETAILS");

        currentLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        currentLabel.setForeground(new java.awt.Color(255, 153, 102));
        currentLabel.setText("PROJECT DETAILS");

        overviewLabal.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        overviewLabal.setForeground(new java.awt.Color(204, 204, 204));
        overviewLabal.setText("OVERVIEW");
        overviewLabal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                overviewLabalMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                overviewLabalMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                overviewLabalMouseEntered(evt);
            }
        });

        logOutSign.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        logOutSign.setForeground(new java.awt.Color(204, 204, 204));
        logOutSign.setText("LOG OUT");
        logOutSign.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                logOutSignMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logOutSignMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logOutSignMouseEntered(evt);
            }
        });

        administratorDetailLable.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        administratorDetailLable.setForeground(new java.awt.Color(204, 204, 204));
        administratorDetailLable.setText("ADMINISTRATOR PAGE");
        administratorDetailLable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                administratorDetailLableMousePressed(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                administratorDetailLableMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                administratorDetailLableMouseEntered(evt);
            }
        });

        surnameSearchLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        surnameSearchLabel1.setForeground(new java.awt.Color(204, 204, 204));
        surnameSearchLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        surnameSearchLabel1.setText("SEARCH ORGANISATIONS");

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));

        footerLab.setForeground(new java.awt.Color(255, 153, 102));
        footerLab.setText("Created by Group 4 ");

        fotterLabel.setForeground(new java.awt.Color(153, 153, 153));
        fotterLabel.setText("Members: Lukas Kopecky (w1701833) - Mhanaj Hossain (w1679296) - Md Reyad (w1689489) - Balthasar Hoettges (w1710494)");

        usernameField.setFont(new java.awt.Font("Dialog", 2, 18)); // NOI18N
        usernameField.setForeground(new java.awt.Color(204, 204, 204));
        usernameField.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        usernameField.setText("Username");

        partiTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Log In", "Log Out", "Duration"
            }
        ));
        partiTable.setRowHeight(14);
        jScrollPane2.setViewportView(partiTable);

        proTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Log In", "Log Out", "Duration"
            }
        ));
        proTable.setRowHeight(14);
        proTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                proTableMousePressed(evt);
            }
        });
        jScrollPane3.setViewportView(proTable);

        orgSearch.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        orgSearch.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        orgSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                orgSearchkeyReleased(evt);
            }
        });

        surnameSearchLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        surnameSearchLabel2.setForeground(new java.awt.Color(204, 204, 204));
        surnameSearchLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        surnameSearchLabel2.setText("SEARCH PROJECTS");

        surnameSearchLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        surnameSearchLabel3.setForeground(new java.awt.Color(255, 153, 102));
        surnameSearchLabel3.setText("PARTICIPATION");

        surnameSearchLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        surnameSearchLabel4.setForeground(new java.awt.Color(255, 153, 102));
        surnameSearchLabel4.setText("ORGANISATIONS");

        surnameSearchLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        surnameSearchLabel5.setForeground(new java.awt.Color(255, 153, 102));
        surnameSearchLabel5.setText("PROJECTS");

        proSearch.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        proSearch.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        proSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                proSearchkeyReleased(evt);
            }
        });

        orgMenu.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        orgMenu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "By Name", "By Country", "By Organisation ID", "By City or Town", "By Activity Type" }));

        proMenu.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        proMenu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "By Title & Acronym", "By ID", "By Status", "By Start Date", "By End Date", "By Funding Scheme" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(adminSign)
                        .addGap(492, 492, 492)
                        .addComponent(userActivitySign))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(surnameSearchLabel4)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1513, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(surnameSearchLabel3)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1508, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(surnameSearchLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(orgMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(orgSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(surnameSearchLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(proMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(proSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(surnameSearchLabel5)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1513, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 1600, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(overviewLabal)
                        .addGap(18, 18, 18)
                        .addComponent(currentLabel)
                        .addGap(18, 18, 18)
                        .addComponent(administratorDetailLable)
                        .addGap(855, 855, 855)
                        .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(logOutSign))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 1600, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(776, 776, 776)
                        .addComponent(footerLab))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(468, 468, 468)
                        .addComponent(fotterLabel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(userActivitySign, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGap(9, 9, 9)
                            .addComponent(adminSign))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(currentLabel)
                    .addComponent(overviewLabal)
                    .addComponent(administratorDetailLable)
                    .addComponent(usernameField)
                    .addComponent(logOutSign))
                .addGap(18, 18, 18)
                .addComponent(surnameSearchLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(orgMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(surnameSearchLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(orgSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(surnameSearchLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(proSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(proMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(surnameSearchLabel2))
                .addGap(13, 13, 13)
                .addComponent(surnameSearchLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(footerLab)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fotterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64))
        );

        Border label_border = BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 153, 102));
        userActivitySign.setBorder(label_border);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/DashboardLogom.png")));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1600, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 933, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void overviewLabalMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_overviewLabalMouseExited
        // TODO add your handling code here:
        overviewLabal.setBorder(null);
    }//GEN-LAST:event_overviewLabalMouseExited

    private void overviewLabalMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_overviewLabalMouseEntered
        // TODO add your handling code here:
        Border label_border = BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 153, 102));
        overviewLabal.setBorder(label_border);
    }//GEN-LAST:event_overviewLabalMouseEntered

    private void administratorDetailLableMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_administratorDetailLableMouseExited
        // TODO add your handling code here:
        administratorDetailLable.setBorder(null);
    }//GEN-LAST:event_administratorDetailLableMouseExited

    private void administratorDetailLableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_administratorDetailLableMouseEntered
        // TODO add your handling code here:
        Border label_border = BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 153, 102));
        administratorDetailLable.setBorder(label_border); 
    }//GEN-LAST:event_administratorDetailLableMouseEntered

    private void logOutSignMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logOutSignMouseExited
        // TODO add your handling code here:
        logOutSign.setBorder(null);
    }//GEN-LAST:event_logOutSignMouseExited

    private void logOutSignMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logOutSignMouseEntered
        // TODO add your handling code here:
        Border label_border = BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 153, 102));
        logOutSign.setBorder(label_border);
    }//GEN-LAST:event_logOutSignMouseEntered

    private void logOutSignMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logOutSignMousePressed
        // TODO add your handling code here:
        
        UserLog log = new UserLog(localUser);
        log.logOut();

        LogPage logp = new LogPage();
        logp.setVisible(true);
        logp.pack();
        logp.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_logOutSignMousePressed

    private void administratorDetailLableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_administratorDetailLableMousePressed
        // TODO add your handling code here:
        
        
        
        UserActivity act = new UserActivity(localUser);
        act.setVisible(true);
        act.pack();
        act.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose(); 
    }//GEN-LAST:event_administratorDetailLableMousePressed

    private void overviewLabalMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_overviewLabalMousePressed
        
        
        
        Dashboard das = new Dashboard(localUser);
        das.setVisible(true);
        das.pack();
        das.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose(); 
    }//GEN-LAST:event_overviewLabalMousePressed

    private void orgSearchkeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_orgSearchkeyReleased
         
        String searchFor = orgSearch.getText();
        String choice = (String) orgMenu.getSelectedItem();
        String preQuery;
        String toSearch;
        String query;
        
        //First par of the query
        preQuery = "SELECT o.orgID AS \"Organisation ID\", o.orgName AS \"Name\", o.orgCountry AS \"Country\", l.city AS \"City or Town\", o.orgURL AS \"Website\", o.orgVATNumber AS \"VAT Number\",  a.oTitle AS \"Activity Type\" "
                        + "FROM Organisation o JOIN Organisation_Activity_Type a "
                        + "JOIN Address l "
                        + "ON o.oCode = a.oCode "
                        + "AND o.locationID = l.locationID ";
        
        //choose search by
        switch (choice) {
            case "By Country":
                
                toSearch = "AND o.orgCountry LIKE '%"+searchFor+"%';";
                break;
            case "By Organisation ID":
                
                toSearch = "AND o.orgID LIKE '%"+searchFor+"%';";
                break;
            case "By Name":
                
                toSearch = "AND o.orgName LIKE '%"+searchFor+"%';";
                break;
            case "By City or Town":
                
                toSearch = "AND l.city LIKE '%"+searchFor+"%';";
                break;
            case "By Activity Type":
                
                toSearch = "AND a.oTitle LIKE '%"+searchFor+"%';";
                break;
            default:
                toSearch =";";
                break;
        }
        
        query = preQuery + toSearch;
        
        //Executing query and displayind data
        List<List<String>> list = connect.readDatabase(query, true);
       
        if(list.size() > 1){
       
            //Creates Array of Columns names
            String [] nameOfCompoundCategories = new String [list.get(1).size()];
            //Populating Array Of Columns Names 
            for(int n = 0; n<list.get(0).size(); n++){
                nameOfCompoundCategories [n] = list.get(0).get(n);
            }

            //loading data
            Object[][] compoundData = new String[list.size()-1][list.get(1).size()];
            //loop thorugh list of list (rows)
            for(int l = 1; l<list.size(); l++){
                //loop through inner list (columns)
                for(int r = 0; r<list.get(l).size(); r++){
                    compoundData [l-1] [r] = list.get(l).get(r);
                }
            } 

            //updading table
            System.out.println("[OrgTable] ... DisplayingSearch");
            DefaultTableModel compoundModel = (DefaultTableModel) orgTable.getModel();
            compoundModel.setDataVector(compoundData,nameOfCompoundCategories);
            
          
        //if keyword was not found    
        }else{
           
            String message = "<html><b>" + searchFor+"</b> not Found </html>";
           
            JOptionPane.showMessageDialog(null, message,
                        "Key Word Not Found", JOptionPane.WARNING_MESSAGE);
           
            orgSearch.setText(null);
           
           
            defaultOrganisation();
           
       }
    
        
    }//GEN-LAST:event_orgSearchkeyReleased
    
    
    
    private void proSearchkeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_proSearchkeyReleased
        // TODO add your handling code here:
        String searchFor = proSearch.getText();
        String choice = (String) proMenu.getSelectedItem();
        String preQuery;
        String toSearch;
        String query;
        
        //first part of the query
        preQuery = "SELECT p.proID as \"Project ID\", p.proAcronym AS Acronym, p.proTitle AS Titile, p.proStatus AS Status, p.proStartDate AS \"Start Date\", "
                + "p.proEndDate AS \"End Date\", p.proTotalCost AS \"Total Cost €\", p.proEcMaxContribution AS \"Max EC Contribution €\", f.fTitle as \"Funding Scheme\" "
                + "FROM Project p "
                + "JOIN Funding_Scheme f "
                + "ON p.fCode = f.fCode ";
        
        
        //choose search by
        switch (choice) {
            case "By Title & Acronym":
                
                toSearch = "AND (proTitle LIKE '%"+searchFor+"%' OR proAcronym LIKE '%"+searchFor+"%');";
                break;
            case "By ID":
               
                toSearch = "AND proID LIKE '%"+searchFor+"%' ;";
                break;  
            case "By Status":
                
                toSearch = "AND proStatus LIKE '%"+searchFor+"%' ;";
                break;
            case "By Start Date":
               
                toSearch = "AND proStartDate LIKE '%"+searchFor+"%' ;";
                break;    
            case "By End Date":
                                
                toSearch = "AND proEndDate LIKE '%"+searchFor+"%' ;";               
                break;                 
            case "By Funding Scheme":
                                
                toSearch = "AND fTitle LIKE '%"+searchFor+"%' ;";              
                break;    
            default:
                toSearch = ";";
                break;
        }
        
        query = preQuery + toSearch;
        

        
        //Executing query and displayind data
        List<List<String>> list = connect.readDatabase(query, true);
       
        if(list.size() > 1){
       
            //Creates Array of Columns names
            String [] nameOfCompoundCategories = new String [list.get(1).size()];
            //Populating Array Of Columns Names 
            for(int n = 0; n<list.get(0).size(); n++){
                nameOfCompoundCategories [n] = list.get(0).get(n);
            }

            //loading data
            Object[][] compoundData = new String[list.size()-1][list.get(1).size()];
            //loop thorugh list of list (rows)
            for(int l = 1; l<list.size(); l++){
                //loop through inner list (columns)
                for(int r = 0; r<list.get(l).size(); r++){
                    compoundData [l-1] [r] = list.get(l).get(r);
                }
            } 

            //updading table
            System.out.println("[ProTable] ... DisplayingSearch");
            DefaultTableModel compoundModel = (DefaultTableModel) proTable.getModel();
            compoundModel.setDataVector(compoundData,nameOfCompoundCategories);
            
          
        //if keyword was not found    
        }else{
           
            String message = "<html><b>" + searchFor+"</b> not Found </html>";
           
            JOptionPane.showMessageDialog(null, message,
                        "Key Word Not Found", JOptionPane.WARNING_MESSAGE);
           
            proSearch.setText(null);
           
           
            defaultProject();
           
       }
    
        
    }//GEN-LAST:event_proSearchkeyReleased

    private void orgTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orgTableMousePressed
Integer row = orgTable.getSelectedRow();
        
        //Selecting value
        String oID = (String) orgTable.getValueAt(row, 0);
        
        //Query to be displayed
        String query = "SELECT p.proID as \"Projec ID\", p.proTitle AS Project, o.orgID as \"Organisation ID\", o.orgName AS Organisation, pa.role as Role, pa.orgEcContribution as \"EC Contribution €\" "
                + "FROM Organisation o "
                + "JOIN Participation pa JOIN Project p  "
                + "ON o.orgID = pa.orgID "
                + "AND pa.proID = p.proID "
                + "AND o.orgID LIKE '"+oID+"';";
        
        //Creates list of Lists 
        List<List<String>> list = connect.readDatabase(query, true);
        
        //Creates Array of Columns names
        String [] nameOfCompoundCategories = new String [list.get(1).size()];
        //Populating Array Of Columns Names 
        for(int n = 0; n<list.get(0).size(); n++){
            nameOfCompoundCategories [n] = list.get(0).get(n);
        }
        
        //loading data
        Object[][] compoundData = new String[list.size()-1][list.get(1).size()];
        //loop thorugh list of list (rows)
        for(int l = 1; l<list.size(); l++){
            //loop through inner list (columns)
            for(int r = 0; r<list.get(l).size(); r++){
                compoundData [l-1] [r] = list.get(l).get(r);
            }
            
        } 
            
        System.out.println("[tableParticipation] ... Dispalying default");
        DefaultTableModel compoundModel = (DefaultTableModel) partiTable.getModel();
        compoundModel.setDataVector(compoundData,nameOfCompoundCategories);
        
        
    }//GEN-LAST:event_orgTableMousePressed

    private void proTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_proTableMousePressed
        Integer row = proTable.getSelectedRow();
        
        //Selecting value
        String pID = (String) proTable.getValueAt(row, 0);
        String pName = (String) proTable.getValueAt(row, 2);
        
        String query = "SELECT p.proID as \"Projec ID\", p.proTitle AS Project, o.orgID as \"Organisation ID\", o.orgName AS Organisation, pa.role as Role, pa.orgEcContribution as \"EC Contribution €\" "
                + "FROM Organisation o "
                + "JOIN Participation pa JOIN Project p  "
                + "ON o.orgID = pa.orgID "
                + "AND pa.proID = p.proID "
                + "AND p.proID LIKE '"+pID+"';";
        
        //Creates list of Lists 
        List<List<String>> list = connect.readDatabase(query, true);
        
        
        
        //if data retrieved
        if(list.size() > 1){
            //Creates Array of Columns names
            String [] nameOfCompoundCategories = new String [list.get(1).size()];
            //Populating Array Of Columns Names 
            for(int n = 0; n<list.get(0).size(); n++){
            nameOfCompoundCategories [n] = list.get(0).get(n);
            }
            

            //loading data
            Object[][] compoundData = new String[list.size()-1][list.get(1).size()];
            //loop thorugh list of list (rows)
            for(int l = 1; l<list.size(); l++){
                //loop through inner list (columns)
                for(int r = 0; r<list.get(l).size(); r++){
                    compoundData [l-1] [r] = list.get(l).get(r);
                }
            } 
            
        //update Table    
        System.out.println("[tableParticipation] ... Dispalying default");
        DefaultTableModel compoundModel = (DefaultTableModel) partiTable.getModel();
        compoundModel.setDataVector(compoundData,nameOfCompoundCategories);
        
        //If not data for a project
        }else{
            
            String message = "<html>Project <b> "+ pName +" </b> has currently no participants</html>";
           
            JOptionPane.showMessageDialog(null, message,
                        "No Participants", JOptionPane.WARNING_MESSAGE);
            
            defaultParticipation();
        }
    }//GEN-LAST:event_proTableMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProjectDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProjectDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProjectDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProjectDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
     

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProjectDetails().setVisible(true);
            }
        });
    }
    
    /**]
     * Displaying default table view
     */
    public final void defaultOrganisation(){
        //Intialise default query
        
    //DISPLAY COMPOUND TABLE
        //Query to be executed
        String query = "SELECT o.orgID AS \"Organisation ID\", o.orgName AS \"Name\", o.orgCountry AS \"Country\", l.city AS \"City or Town\", o.orgURL AS \"Website\", o.orgVATNumber AS \"VAT Number\",  a.oTitle AS \"Activity Type\" "
                + "FROM Organisation o JOIN Organisation_Activity_Type a "
                + "JOIN Address l "
                + "ON o.oCode = a.oCode "
                + "AND o.locationID = l.locationID;";
        
        //Creates list of Lists 
        List<List<String>> list = connect.readDatabase(query, true);
        
        //Creates Array of Columns names
        String [] nameOfCompoundCategories = new String [list.get(1).size()];
        //Populating Array Of Columns Names 
        for(int n = 0; n<list.get(0).size(); n++){
            nameOfCompoundCategories [n] = list.get(0).get(n);
        }
        
        //loading data
        Object[][] compoundData = new String[list.size()-1][list.get(1).size()];
        //loop thorugh list of list (rows)
        for(int l = 1; l<list.size(); l++){
            //loop through inner list (columns)
            for(int r = 0; r<list.get(l).size(); r++){
                compoundData [l-1] [r] = list.get(l).get(r);
            }
            
        } 
            
        System.out.println("[tableOrganisation] ... Dispalying default");
        DefaultTableModel compoundModel = (DefaultTableModel) orgTable.getModel();
        compoundModel.setDataVector(compoundData,nameOfCompoundCategories); 
 
    }
    
        public final void defaultProject(){
        //Intialise default query
        
    //DISPLAY COMPOUND TABLE
        //Query to be executed
        String query = "SELECT p.proID as \"Project ID\", p.proAcronym AS Acronym, p.proTitle AS Titile, p.proStatus AS Status, p.proStartDate AS \"Start Date\", "
                + "p.proEndDate AS \"End Date\", p.proTotalCost AS \"Total Cost €\", p.proEcMaxContribution AS \"Max EC Contribution €\", f.fTitle as \"Funding Scheme\" "
                + "FROM Project p "
                + "JOIN Funding_Scheme f "
                + "ON p.fCode = f.fCode;";
        
        //Creates list of Lists 
        List<List<String>> list = connect.readDatabase(query, true);
        
        //Creates Array of Columns names
        String [] nameOfCompoundCategories = new String [list.get(1).size()];
        //Populating Array Of Columns Names 
        for(int n = 0; n<list.get(0).size(); n++){
            nameOfCompoundCategories [n] = list.get(0).get(n);
        }
        
        //loading data
        Object[][] compoundData = new String[list.size()-1][list.get(1).size()];
        //loop thorugh list of list (rows)
        for(int l = 1; l<list.size(); l++){
            //loop through inner list (columns)
            for(int r = 0; r<list.get(l).size(); r++){
                compoundData [l-1] [r] = list.get(l).get(r);
            }
            
        } 
            
        System.out.println("[tableProject] ... Dispalying default");
        DefaultTableModel compoundModel = (DefaultTableModel) proTable.getModel();
        compoundModel.setDataVector(compoundData,nameOfCompoundCategories); 
 
    }
        
    public final void defaultParticipation(){
        //Intialise default query
        
    //DISPLAY COMPOUND TABLE
        //Query to be executed
        String query = "SELECT p.proID as \"Projec ID\", p.proTitle AS Project, o.orgID as \"Organisation ID\", o.orgName AS Organisation, pa.role as Role, pa.orgEcContribution as \"EC Contribution €\" "
                + "FROM Organisation o "
                + "JOIN Participation pa JOIN Project p  "
                + "ON o.orgID = pa.orgID "
                + "AND pa.proID = p.proID";
        
        //Creates list of Lists 
        List<List<String>> list = connect.readDatabase(query, true);
        
        //Creates Array of Columns names
        String [] nameOfCompoundCategories = new String [list.get(1).size()];
        //Populating Array Of Columns Names 
        for(int n = 0; n<list.get(0).size(); n++){
            nameOfCompoundCategories [n] = list.get(0).get(n);
        }
        
        //loading data
        Object[][] compoundData = new String[list.size()-1][list.get(1).size()];
        //loop thorugh list of list (rows)
        for(int l = 1; l<list.size(); l++){
            //loop through inner list (columns)
            for(int r = 0; r<list.get(l).size(); r++){
                compoundData [l-1] [r] = list.get(l).get(r);
            }
            
        } 
            
        System.out.println("[tableParticipation] ... Dispalying default");
        DefaultTableModel compoundModel = (DefaultTableModel) partiTable.getModel();
        compoundModel.setDataVector(compoundData,nameOfCompoundCategories); 
 
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel adminSign;
    private javax.swing.JLabel administratorDetailLable;
    private javax.swing.JLabel currentLabel;
    private javax.swing.JLabel footerLab;
    private javax.swing.JLabel fotterLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel logOutSign;
    private javax.swing.JComboBox<String> orgMenu;
    private javax.swing.JTextField orgSearch;
    private javax.swing.JTable orgTable;
    private javax.swing.JLabel overviewLabal;
    private javax.swing.JTable partiTable;
    private javax.swing.JComboBox<String> proMenu;
    private javax.swing.JTextField proSearch;
    private javax.swing.JTable proTable;
    private javax.swing.JLabel surnameSearchLabel1;
    private javax.swing.JLabel surnameSearchLabel2;
    private javax.swing.JLabel surnameSearchLabel3;
    private javax.swing.JLabel surnameSearchLabel4;
    private javax.swing.JLabel surnameSearchLabel5;
    private javax.swing.JLabel userActivitySign;
    private javax.swing.JLabel usernameField;
    // End of variables declaration//GEN-END:variables
}
